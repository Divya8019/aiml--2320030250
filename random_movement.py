# -*- coding: utf-8 -*-
"""random movement

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1mv1qgvgyTYxBtdXo7my94QI29Fr0RD-w
"""

import random
import time

# Initial position of the variable
x, y = 0, 0

# Function to display the current position
def display_position(x, y):
    print(f"Current Position: ({x}, {y})")

# Number of random moves
steps = 10

# Simulate random movement
for _ in range(steps):
    direction = random.choice(['up', 'down', 'left', 'right'])

    if direction == 'up':
        y += 1
    elif direction == 'down':
        y -= 1
    elif direction == 'left':
        x -= 1
    elif direction == 'right':
        x += 1

    display_position(x, y)
    time.sleep(0.5)  # Add delay to see each step

#random variable movement
import random
import matplotlib.pyplot as plt

def random_variable_movement(steps):
    position = [0]  # Start at position 0

    for _ in range(steps):
        move = random.choice([-1, 1])
        position.append(position[-1] + move)

    return position


steps = 100


movement = random_variable_movement(steps)


plt.plot(movement)
plt.title(f"Random Variable Movement over {steps} steps")
plt.xlabel("Step")
plt.ylabel("Position")
plt.show()

import seaborn as sns

df = pd.DataFrame({
    'task': ['Design', 'Development', 'Testing', 'Deployment'],
    'hours_spent': [30, 45, 20, 15]
})

sns.barplot(x='task', y='hours_spent', data=df)
plt.title('Hours Spent on Different Project Phases')
plt.show()

df = pd.DataFrame({
    'task_duration': [5, 6, 7, 5, 6, 8, 9, 4, 5, 7]
})

plt.hist(df['task_duration'], bins=5, color='blue', edgecolor='black')
plt.title('Distribution of Task Durations')
plt.xlabel('Duration (hours)')
plt.ylabel('Frequency')
plt.show()

df = pd.DataFrame({
    'task_duration': [5, 6, 7, 5, 6, 8, 9, 4, 5, 7],
    'task_cost': [100, 120, 150, 110, 130, 180, 200, 90, 95, 140]
})

plt.scatter(df['task_duration'], df['task_cost'], color='red')
plt.title('Task Duration vs Cost')
plt.xlabel('Task Duration (hours)')
plt.ylabel('Cost (USD)')
plt.grid(True)
plt.show()

import numpy as np

# Sample correlation matrix
data = np.random.rand(5, 5)
sns.heatmap(data, annot=True, cmap='coolwarm')
plt.title('Heatmap of Task Correlations')
plt.show()

sns.boxplot(x=df['task_duration'])
plt.title('Box Plot of Task Durations')
plt.show()

import plotly.express as px
df = pd.DataFrame([
    dict(Task="Design", Start='2023-01-01', Finish='2023-01-10'),
    dict(Task="Development", Start='2023-01-11', Finish='2023-02-01'),
    dict(Task="Testing", Start='2023-02-02', Finish='2023-02-15'),
    dict(Task="Deployment", Start='2023-02-16', Finish='2023-02-28')
])
fig = px.timeline(df, x_start="Start", x_end="Finish", y="Task")
fig.show()

import seaborn as sns

df = pd.DataFrame({
    'task': ['Design', 'Development', 'Testing', 'Deployment'],
    'hours_spent': [30, 45, 20, 15]
})

sns.barplot(x='task', y='hours_spent', data=df)
plt.title('Hours Spent on Different Project Phases')
plt.show()

plt.figure(figsize=(6, 6))
labels = ['Design', 'Development', 'Testing', 'Deployment']
sizes = [25, 35, 20, 20]
colors = ['#ff9999','#66b3ff','#99ff99','#ffcc99']

plt.pie(sizes, labels=labels, colors=colors, autopct='%1.1f%%', startangle=90)
plt.title('Task Distribution in Project')
plt.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.
plt.show()

